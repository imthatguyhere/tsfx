name: Publish

on:
  workflow_call:
    inputs:
      packages_matrix:
        required: true
        type: string
      packages_to_release:
        required: true
        type: string
    outputs:
      has_packages_to_release:
        value: ${{ jobs.aggregate.outputs.has_packages_to_release }}

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(inputs.packages_matrix) }}
    steps:
      - name: Check if package should be released
        id: decision
        run: |
          SHOULD_RELEASE=false
          IFS=',' read -ra RELEASE_PACKAGES <<< "${{ inputs.packages_to_release }}"
          for pkg in "${RELEASE_PACKAGES[@]}"; do
            if [[ "$pkg" == "${{ matrix.package }}" ]]; then
              SHOULD_RELEASE=true
              break
            fi
          done
          echo "should_release=$SHOULD_RELEASE" >> $GITHUB_OUTPUT

      - name: Skip package
        if: steps.decision.outputs.should_release != 'true'
        run: |
          echo "Skipping '${{ matrix.package }}' (not in release list)"
          exit 0

      - name: Checkout code
        if: steps.decision.outputs.should_release == 'true'
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: steps.decision.outputs.should_release == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Clean install dependencies
        if: steps.decision.outputs.should_release == 'true'
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Lint
        if: steps.decision.outputs.should_release == 'true'
        run: npx turbo run lint --filter=@tsfx/${{ matrix.package }}

      - name: Build
        if: steps.decision.outputs.should_release == 'true'
        run: npx turbo run build --filter=@tsfx/${{ matrix.package }}

      # TODO: Publish to NPM

      - name: Structure dist for release
        if: steps.decision.outputs.should_release == 'true'
        run: |
          mkdir -p release/${{ matrix.package }}
          cp -r packages/${{ matrix.package }}/dist release/${{ matrix.package }}/

      - name: Upload artifacts
        if: steps.decision.outputs.should_release == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: tsfx-packages
          path: release/
          retention-days: 7

  aggregate:
    needs: publish
    runs-on: ubuntu-latest
    outputs:
      has_packages_to_release: ${{ steps.set_output.outputs.has_packages_to_release }}
    steps:
      - id: set_output
        run: |
          HAS_RELEASE=false
          for sr in ${{ join(needs.publish.*.outputs.should_release, ' ') }}; do
            if [[ "$sr" == "true" ]]; then
              HAS_RELEASE=true
              break
            fi
          done
          echo "has_packages_to_release=$HAS_RELEASE" >> $GITHUB_OUTPUT