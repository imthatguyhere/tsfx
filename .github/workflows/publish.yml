name: Publish

on:
  workflow_call:
    inputs:
      packages_matrix:
        required: true
        type: string
      packages_to_release:
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    strategy:
      matrix:
        package: ${{ fromJson(inputs.packages_matrix) }}
    steps:
      - name: Check if package should be released
        id: decision
        run: |
          if [ -z "${{ inputs.packages_to_release }}" ]; then
            SHOULD_RELEASE=false
          else
            IFS=',' read -ra RELEASE_PACKAGES <<< "${{ inputs.packages_to_release }}"
            SHOULD_RELEASE=false
            for pkg in "${RELEASE_PACKAGES[@]}"; do
              if [[ "$pkg" == "${{ matrix.package }}" ]]; then
                SHOULD_RELEASE=true
                break
              fi
            done
          fi
          echo "should_release=$SHOULD_RELEASE" >> $GITHUB_OUTPUT

      - name: Skip package
        if: steps.decision.outputs.should_release != 'true'
        run: |
          echo "Skipping '${{ matrix.package }}' (not in release list)"
          exit 0

      - name: Checkout code
        if: steps.decision.outputs.should_release == 'true'
        uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Node.js
        if: steps.decision.outputs.should_release == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Clean install dependencies
        if: steps.decision.outputs.should_release == 'true'
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Lint
        if: steps.decision.outputs.should_release == 'true'
        run: npx turbo run lint --filter=@tsfx/${{ matrix.package }}

      - name: Build
        if: steps.decision.outputs.should_release == 'true'
        run: npx turbo run build --filter=@tsfx/${{ matrix.package }}

      - name: Publish to NPM
        if: steps.decision.outputs.should_release == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
          npm publish --access public --workspace @tsfx/${{ matrix.package }}

      - name: Structure dist for release
        if: steps.decision.outputs.should_release == 'true'
        run: |
          mkdir -p release/${{ matrix.package }}
          cp -r packages/${{ matrix.package }}/dist release/${{ matrix.package }}/

      - name: Upload artifacts
        if: steps.decision.outputs.should_release == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: tsfx-packages
          path: release/
          retention-days: 7