name: Release Packages

on:
  workflow_dispatch:
  push:
    paths:
      - 'packages/core/package.json'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.version_check.outputs.should_release }}
      package_version: ${{ steps.version_check.outputs.package_version }}
      packages_to_release: ${{ steps.version_check.outputs.packages_to_release }}
    strategy:
      matrix:
        package: [core]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Get package version and check against npm
        id: version_check
        run: |
          PACKAGE_NAME=$(jq -r '.name' ./packages/${{ matrix.package }}/package.json)
          CURRENT_VERSION=$(jq -r '.version' ./packages/${{ matrix.package }}/package.json)

          echo "Package: $PACKAGE_NAME"
          echo "Local version: $CURRENT_VERSION"

          PUBLISHED_VERSION=$(npm view "$PACKAGE_NAME" version || echo "0.0.0")
          echo "Published version: $PUBLISHED_VERSION"

          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "Version has changed — should release."
            echo "${{ matrix.package }}" >> changed_packages.txt
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "package_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "No version change — skip release."
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "package_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Collect changed packages
        id: collect_packages
        run: |
          if [ -f changed_packages.txt ]; then
            PACKAGES_TO_RELEASE=$(paste -sd "," changed_packages.txt)
            echo "Packages to release: $PACKAGES_TO_RELEASE"
            echo "packages_to_release=$PACKAGES_TO_RELEASE" >> $GITHUB_ENV
          else
            echo "No packages to release"
            echo "packages_to_release=" >> $GITHUB_ENV
          fi
